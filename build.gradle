plugins {
    alias(libs.plugins.indra.publishing)
    alias(libs.plugins.indra)
    alias(libs.plugins.indra.crossdoc) apply false
    alias(libs.plugins.titan)
}

group("net.deltapvp.libby")

repositories {
    mavenCentral()
    maven {
        name = "delta-new"
        url = uri("https://maven.deltapvp.net/")
    }
}

subprojects {
    apply plugin: "net.kyori.indra"
    apply plugin: "net.kyori.indra.publishing"
    apply plugin: "net.kyori.indra.crossdoc"
    apply plugin: "net.deltapvp.titan"

    shadowJar {
        def toRelocate = ["org.intellij", "org.jetbrains.annotations"]

        toRelocate.forEach {
            relocate(it, "net.deltapvp.libby.lib.${it}")
        }
    }

    indra {
        mitLicense()
        github("powercasgamer", "libby")
        if (project.name.endsWithAny("paper", "velocity")) {
            javaVersions {
                testWith(17)
                target(17)
                minimumToolchain(17)
            }
        } else {
            javaVersions {
                testWith(11, 17)
                target(11)
                minimumToolchain(17)
            }
        }

        configurePublications {
            pom {
                developers {
                    developer {
                        id = "powercas_gamer"
                        timezone = "Europe/Amsterdam"
                    }
                }
            }

            versionMapping {
                usage(Usage.JAVA_API) { fromResolutionOf(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME) }
                usage(Usage.JAVA_RUNTIME) { fromResolutionResult() }
            }
        }

        publishReleasesTo("drink", "https://repo.iwantadr.ink/releases/")
        publishSnapshotsTo("drink", "https://repo.iwantadr.ink/snapshots/")
    }

    indraCrossdoc {
        baseUrl().set(providers.gradleProperty("javadocPublishRoot")) // or a hardcoded URL
        nameBasedDocumentationUrlProvider {
            projectNamePrefix = 'libby-'
        }
    }
}